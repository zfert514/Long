%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 25.4.1%%For: (Zachary Fertig) ()%%Title: (logo1_theriault copy.ai)%%CreationDate: 4/20/22 11:57 AM%%Canvassize: 16383%%BoundingBox: -35 -452 2182 1661%%HiResBoundingBox: -34.0718 -451.4532 2181.3628 1660.8474%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 960.5 539.5 960.5 539.5%AI3_TileBox: 582 252 1316 828%AI3_DocumentPreview: None%AI5_ArtSize: 1920 1080%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1459.0876 2631.8672 0.375893 2547 1303 18 0 0 6 45 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 124 8%%BeginData: 13402 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2CFFA852FD07FFA852527DFD71FFA852F852FD07FF7DF827F87D%FD70FF52202727FD07FF5227272752FD6FFFA8202720277DCAFD05FF52F8%27F87DFD6FFFFD0727A8FD04FFFD0427A8FD6EFF76F82627272720277DFF%FFFFA8272027277D4B272752A8FD69FFA8FD0727FD04FFA8FD0427202726%272027A8FD69FFA8272720277DFD05FF7D272627F84B27272027F87DFD6A%FF52272727A8FD05FF7D20272752A8FF5227272752FD06FFA87D7D7DFD60%FF27272027A8FD05FF5227272752FFFF7DF827F87DFD04FFA8522027F827%2652A8FD5DFF52272726A8FD05FF52202727A8FFFF522727277DFFFFFFA8%27F827272720272052FD5DFF5227262752FFCAFFFFFF27272027A8FFFF52%2027F8A8FFFFFF52F827F8517DA82727F852FD5CFF7D20FD04277DFFFFA8%FD0427FFFFFFFD0427A8FFFFCAFD04277DFFFFFF272720A8FD5BFFA827F8%27F82052FFFFA8F827F852FFFFA8FD0427FFFFFF7D272727F82752A8A827%272752FD5CFF7D52275252A8FFFFA852272752FFFFA820272052FFFFFF7D%F8272752272720FD042752FD5DFFA8FFA8FD05FFA8FF7DA8FFFFA827F827%7DFFFFFF7D2720277DFF7D522627F82752FD6CFFA8A8A8FD05FF2727277D%FD04FF7D5227A8FD74FF7DF8272752527D7DFFFFA8FD76FFA82727202720%27277DFD0EFF52A1FD68FFCA524B262720527DFD0DFF7D27F852A8FD6AFF%A8FD0FFFA84B2727F8A8FD7AFF52F8FD04275252FD77FF7D20FD05272027%4BFD75FFA8F827272720522727F852FD75FFFD0527A8FFFF7D7DFD75FF4B%272627F87DFD79FFA8272727F87DFD7BFF5227F84BA8FD07FF7D764B5252%FD70FFA852A8FD07FF52272627202727A8FD77FF522020272727F82720A8%FD75FFA8FD04274B767D272727FD75FF52F827202727FFFFA8202752FD74%FF2727274B272776FFFF522727A8FD73FF52F8277DFF272776A8262720A8%FD73FF7627F8A1FFFFFD0627A8FD73FFA8202727A8FFA826FD0427FD75FF%A120272776FFFF2727F8A1FD63FFA1A177A2A8FD0EFF7DF827F851FFA8F8%52FD41FFA8A8A1A1A1FD1DFF777670777077A8FD0EFFA85227F87DFD43FF%7D764C764C7676A8FD1AFF777670764C764C76A1FD0FFFA8A87DFD06FFA8%7DA8FD39FF777676777677767776A8FD18FFA2767677767776777677CAFD%15FF7D5227272752A8FD36FF777676764C7776764C7670CAFD16FFCA764C%7776764C7776764CA1FD14FF7D27F8272727F8277DFD34FFA27676777677%76777677767677FD16FFA27077767776777677767770FD13FF7DFD072720%27A8FD32FFA8764C764C7670764C7670764C76A8FD14FFCB4C7670764C76%70764C7670767DFD12FF4BF827202727A87D27F852FD32FFA87077767776%7776777677767770A2FD14FF7D777677767776777677767770A2FD11FFA8%FD052752FFFF7D2727A8FD31FFFD04764C7776764C7776764C7676FD13FF%A8764C7776764C7776764C77767676FD11FFA127204BA876F87DFFA82027%7CFD30FFA2767677767776777677767776777077FD13FFA2707776777677%76777677767776A1FD12FF272752FFA82727A85227207DFD2FFFA8774C76%4C7670764C7670764C76707676FD12FFCA4C7670764C7670764C7670764C%7677FD12FF52F827A8FF7D20F827272752FD2FFFCA767776777677767776%777677767770A8FD12FF7D7776777677767776777677767770A8FD12FFA8%272752A8FFFD042720A8FD2FFFFD04764C7776764C7776764C777077CAFD%11FFA8764C7776764C7776764C7776764C76A8FD13FF5220F827A8A8F827%F852FD2FFFA8767677767776777677767776777676A2FD12FFA270777677%7677767776777677767677FD15FF5227F852FF52F852FD30FFA14C764C76%70764C7670764C76707676FD13FF4C7670764C7670764C7670764C764CA8%FD16FF7D5227FFA87DA8FD07FF7D7DFD27FF767776777677767776777677%767770CAFD12FFA17776777677767776777677767776A1FD22FFA87D2727%207DFD25FF7D7676764C7776764C7776764C777077FD13FF774C7776764C%7776764C7776764C76A1FD20FFA85227F827262720A8FD24FF7770777677%76777677767776777676A8FD12FFCA707776777677767776777677767676%FD1FFF7D52FD0627F827A8FD23FFA84C764C7670764C7670764C76707676%FD13FF767670764C7670764C7670764C764CA1FD1CFFA87D2727F8272727%F8272776A8FD24FF777676777677767776777677767770CAFD12FFA87776%77767776777677767776777677A8FD1BFF524B2627274B272720527DFD26%FFA87676764C7776764C7776764C774C77FD13FFA14C7776764C7776764C%7776764C7677FD1BFFA82720272727F82752A8A8FD27FFA14C7776777677%7677767776777676A8FD13FF767776777677767776777677767770CBFD1C%FF52272027277DA8FD29FFCB4C764C7670764C7670764C76707676FD13FF%7D7670764C7670764C7670764C764C7DFD1DFFA8F84B76FD2CFFA1767677%7677767776777677767770A8FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF%A8777677767776777677767776777676A8FD1EFFA8FD2DFFA87770764C77%76764C7776764C777676707776764C7776764C7776764C7776764C777676%4C7776764C7776764C7776764C77707DA8FD44FFA8FFA8A87DA17D777077%767776777677767776777677767776777676767776767677767676777676%767776777677767776777677767776777677767676A1A1FD3CFFA8A2777D%76764C764C764C764C764C7670764C7670764C7670764C7670764C767076%4C7670764C7670764C7670764C7670764C7670764C7670764C7670764C76%70764C764CA1A8FD36FFA8A2767770777677767776777677767776777677%767776777677767776777677767776777677767776777677767776777677%767776777677767776777677767776777677767776777077A8FD33FFA876%764C7670764C7776764C7776764C7776764C7776764C7776764C7776764C%7776764C7776764C7776764C7776764C7776764C7776764C7776764C7776%764C7776764C7776764C7776764C76A2FD30FFA87D4C7776777677767776%777677767776777677767776777677767776777677767776777677767776%777677767776777677767776777677767776777677767776777677767776%777677767776777077A8FD2EFFA1764C764C7670764C7670764C7670764C%7670764C7670764C7670764C7670764C7670764C7670764C7670764C7670%764C7670764C7670764C7670764C7670764C7670764C7670764C7670764C%7670764CA1FD2DFFA8767677767776777677767776777677767776777677%767776777677767776777677767776777677767776777677767776777677%767776777677767776777677767776777677767776777677767776777677%76FD21FF7DFD0BFF774C7776764C7776764C7776764C7776764C7776764C%7776764C7776764C7776764C7776764C7776764C7776764C7776764C7776%764C7776764C7776764C7776764C7776764C7776764C7776764C7776764C%76A8FD1EFFA82727A8FD0AFF767676777677767776777677767776777677%767776777677767776777677767776777677767776777677767776777677%767776777677767776777677767776777677767776777677767776777677%7677767770CAFD1CFFCA7D202727A8FD0AFF7D4C764C7670764C7670764C%7670764C7670764C7670764C7670764C7670764C7670764C7670764C7670%764C7670764C7670764C7670764C7670764C7670764C7670764C7670764C%7670764C7670764C767076A1FD12FFA82727A8FD05FF7D27F82720277DFD%0AFFA8767677767776777677767776777677767776777677767776777677%767776777677767776777677767776777677707776767077767776777677%76777677767776777677767670777677767776777677767776FD13FF5227%20A8FFFFFFCA52FD052752FD0CFF77764C7776764C7776764C7776764C77%76764C7776764C7776764C7776764C764C764C7670764C777677767D767D%77A17DA1FD04764C7776764C7776764C7770777DA17777767776764C764C%764C764CA1FD13FF7DF82752FFA87D20272027F8277DFD0EFF7776707776%7776777677767776767677767776777677767776777677767DA1A8A2CAA8%CBA8FFA8FD0AFF777077767776777677767776777677A8FD05FFCAFFA8CA%A8A8A1A177A8FD14FF7D2727274B4B20FD04277DCAFD10FFA1774C764C76%4C764C76767D76764C7670764C7670764C7670764C77A8FD12FFA84C764C%7670764C7670764C76707677FD25FF27272027202720274BA8FD15FFA8A8%A2CAA8FFCAFFFFA17077767776777677767776777677A1FD13FF77767677%7677767776777677767770CBFD25FFA820FD04274B274B4B52527D7DFD1A%FF70764C7776764C7776764C7776764CFD13FFA87676764C7776764C7776%764C777077FD27FFA127272027F8272727F827202727FD18FF7D76767776%77767776777677767770A1FD13FFA14C77767776777677767776777676A2%FD29FFA8A87D52272720272027272752FD16FFA8764C7670764C7670764C%7670764C76A8FD12FFCB4C764C7670764C7670764C7670764CFD2FFFA17D%52522727F852FD16FFA8707776777677767776777677767777FD13FFA176%76777677767776777677767770A8FD34FFA87DA8FD16FF76764C7776764C%7776764C7776764CA8FD12FFA87770764C7776764C7776764C777076A8FD%4CFFA877767776777677767776777677767DFD13FFA24C77767776777677%7677767776767DFD4DFFA14C7670764C7670764C7670764C7676A27DA17D%7D76A1777D76A1777D76A177A177A170764C7670764C7670764C7670764C%CAFD31FFA8A8FD1AFF767776777677767776777677767776777077707670%77767670777676707776767077767776777677767776777677767776A1FD%30FFA85227272752A8FD14FFA8FF77764C7776764C7776764C7776764C77%76764C7776764C7776764C7776764C7776764C7776764C7776764C777676%4C77767670A1A1A8A2FD2BFF7D27F8272027F8277DFD0CFFA8FFA8A87DA1%777770777677767776777677767776777677767776777677767776777677%7677767776777677767776777677767776777677767776774C76767670A1%A1FD27FFA82720FD0727A8FD06FFA8A87DA176764C764C764C764C764C76%70764C7670764C7670764C7670764C7670764C7670764C7670764C767076%4C7670764C7670764C7670764C7670764C7670764C7670764C7676A8FD25%FF7DF827F8272727F827F852FFFFFFA8A877777077767776777677767776%777677767776777677767776777677767776777677767776777677767776%777677767776777677767776777677767776777677767776777677767776%7770CAFD24FF4B2727A1FFFFA87D272727FFFF7D764C7670764C7776764C%7776764C7776764C7776764C7776764C7776764C7776764C7776764C7776%764C7776764C7776764C7776764C7776764C7776764C7776764C7776764C%7776764C77767670FD23FFA827F852FD05FF522027A87076767776777677%767776777677767776777677767776777677767776777677767776777677%767776777677767776777677767776777677767776777677767776777677%7677767776777677767776767DFD23FF272752FD05FF2727274C764C7670%764C7670764C7670764C7670764C7670764C7670764C7670764C7670764C%7670764C7670764C7670764C7670764C7670764C7670764C7670764C7670%764C7670764C7670764C7670764C764C76A8FD22FF27F8277DFFA8FF7D27%202777767776777677767776777677767776777677767776777677767776%777677767776777677767776777677767776777677767776777677767776%777677767776777677767776777677767776777677767770A8FD22FF52FD%042752FD0427527D764C7776764C7776764C7776764C7776764C7776764C%7776764C7776764C7776764C7776764C7776764C7776764C7776764C7776%764C7776764C7776764C7776764C7776764C7776764C7776764C77767677%FD22FFA8F8272727F8272727F8A8FF767676777677767776777677767776%777677767776777677767776777677767776777677767776777677767776%767077767776777677767776777677767776777677767776777677767776%777677767776A1FD23FF7DF8FD0527207DFFFFA24C764C7670764C767076%4C7670764C7670764C7670764C7670764C7670764C7670764C764C764C76%4C764C7676764C7770764C7670764C7670764C7670764C764C764C767076%4C7670764C7670764C767DFD24FFA8FD0527A8FD04FFA876767677767776%7776777677767776777677767776777677767776777076767776A17DA2A1%A8A8CAA8FFCAFD04FFA87077767776777677767776777677767776777676%7077767776777677767776FD31FFCA7D7770764C7670764C7676764C7776%764C7776764C7776764C7676A17DA8A8FFCAFD0DFF7D764C7776764C7776%764C7776764CA8FFFFA8A8A1A177A176764C764C764CA2FD35FFA2A1777D%76777677767776777677767776777677767676FD13FFA877767776777677%76777677767776A1FD0CFFA8CAA2CAFD39FFA8FFA8CAA2774C764C767076%4C7670764C764CA2FD13FFA14C7670764C7670764C7670764C76A2FD34FF%A87DA8A8FD16FF7776767776777677767776777677CAFD13FF7677767776%77767776777677767777FD34FF7DFD0527527DA8FD11FFA87670764C7776%764C7776764C767DFD13FFA2764C7776764C7776764C7776764CA8FD33FF%A8202720272727F82720277CFD0FFFA24C777677767776777677767770FD%14FFA17677767776777677767776777677FD34FF7627272720FD05272076%FD0FFF76764C7670764C7670764C764C7DFD13FFCA4C7670764C7670764C%7670764C76A1FD34FF76F82727522627F827F8277DFD0EFFA87676777677%7677767776777676A8FD13FF7D7776777677767776777677767776FD35FF%7D2727A8FFFFA87D525227FD0FFFA24C764C7776764C7776764C7676FD13%FFCA764C7776764C7776764C7776764CA2FD36FF2027A8FD05FFA8FD10FF%7677767776777677767776774CA8FD13FFA8707776777677767776777677%7676A8FD35FF7D4B207DA8FD14FFA8764C7670764C7670764C764C76A8FD%13FF767670764C7670764C7670764C7677FD35FF76202627F8274B7D7DFD%11FFA8707776777677767776777676A1FD13FFCA77767776777677767776%77767776CBFD35FF7D2627274B272720272752A8FD0EFF77764C7776764C%7776764C7670CAFD13FFA84C7676764C7776764C7776764CA1FD36FF5127%202720272727202727FD0FFF777677767776777677767770A1FD14FFA176%767776777677767776777676A8FD37FFA87D524B20272727F852FD0EFFCA%4C7670764C7670764C767076A1FD14FF7D4C764C7670764C7670764C7676%FD3BFFA8A87652272752FD0EFFA2777677767776777677767776FD15FF76%777677767776777677767770A8FD40FFA8FD0FFFA24C7776764C7776764C%774CA1FD14FFA87770764C7776764C7776764C77FD51FF7D767677767776%7776777677A8FD15FF767776777677767776777676A8FD51FFA14C764C76%70764C76707676FD15FFA8764C7670764C7670764C7676FD52FF77777677%76777677767770A8FD16FF7677767776777677767776CBFD52FF7D70764C%7776764C777076A8FD16FF774C7776764C7776764CA1FD53FF7777767776%7776777676A1FD17FFA176767776777677707DFD54FFA14C7670764C7670%764CFD19FF76764C7670764C77A8FD54FFA8767677767776774CA8FD1AFF%7776767670A2FD57FFFD04764C774C7DFD1CFFA1A177A8FD58FFCB707776%774CA1FD7AFFA876764C7DA8FD6CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au0 O0.617121 0.672053 0.638849 0.621424 0.223529 0.176471 0.172549 Xa0 J 0 j 1 w 10 M []0 d0 XR955.0093 1559.9071 m962.0439 1563.3645 968.4896 1567.5164 975.5378 1569.8408 c1031.484 1588.2903 1072.0021 1557.2063 1066.5108 1498.9691 C1063.9435 1471.7427 1057.8204 1444.856 1053.4254 1417.7963 c1048.3727 1386.6861 1013.1172 1373.5225 987.0518 1392.7064 c977.7209 1399.574 982.5831 1407.824 983.6853 1415.409 c987.4585 1441.3762 992.0169 1467.2282 996.0694 1493.1565 c998.5829 1509.2367 993.8806 1523.1618 977.1392 1526.7193 c958.5805 1530.663 947.7231 1518.671 944.1948 1501.6893 c938.624 1474.8754 933.5375 1447.8719 930.1732 1420.7101 c925.4805 1382.8231 900.7569 1411.3578 886.3303 1407.8795 c873.615 1404.8136 857.0702 1408.0927 861.0243 1431.0267 c872.9869 1500.4109 884.329 1569.9132 894.7449 1639.5442 c897.0874 1655.2038 901.7331 1659.0985 917.7004 1656.3841 c964.9101 1648.3584 964.6214 1649.1861 959.0001 1601.2489 c957.4947 1588.411 949.5305 1576.3292 955.0093 1559.9071 Cf2050.662 366.5809 m2078.9572 363.2714 2107.2094 359.5143 2135.5606 356.786 c2160.7512 354.362 2180.9866 324.1723 2174.539 299.1005 c2171.0247 285.4343 2161.2426 290.8265 2154.8052 292.1247 C2085.0845 306.1829 2015.15 319.4901 1946.0673 336.2686 c1912.8968 344.3248 1884.2817 408.6112 1898.2415 437.5461 c1903.9128 449.3011 1917.6752 449.7959 1929.6519 451.1757 c1946.5104 453.1179 1941.1514 439.9874 1942.7134 431.927 C1950.2144 393.2228 1964.724 386.6655 1998.382 407.2985 c2045.8091 436.3723 2093.1518 465.5846 2141.522 495.3476 C2156.6802 427.9108 2156.6521 427.9672 2100.2671 399.9907 c2082.74 391.2942 2065.4095 382.2011 2047.9893 373.2896 C2048.8803 371.0533 2049.771 368.8171 2050.662 366.5809 Cf0.617731 0.66305 0.646967 0.61944 0.223529 0.180392 0.172549 Xa1980.8111 -153.4214 m1968.0952 -130.1415 1960.6949 -111.908 1964.5971 -90.1848 c1971.1707 -53.5897 1988.1776 -37.8225 2024.9172 -38.1709 C2067.1429 -38.5715 2107.0909 -52.6439 2146.9894 -63.3517 C2173.2621 -70.4025 2148.8864 -93.378 2149.1937 -108.9123 c2149.3386 -116.2271 2151.6252 -134.8664 2129.3422 -128.0367 C2101.0358 -119.3614 2071.2585 -115.5743 2042.2711 -108.9942 c2027.0361 -105.5357 2015.4288 -109.8083 2010.5782 -124.3517 c2005.1893 -140.5093 2012.9179 -154.1385 2027.9257 -159.1631 c2054.929 -168.2039 2082.7894 -174.8381 2110.5461 -181.4024 c2122.423 -184.2112 2137.1312 -183.4104 2128.0485 -201.9843 C2120.2984 -217.8325 2130.9438 -250.7748 2101.4303 -246.5062 c2051.0444 -239.2188 2001.842 -223.9194 1951.9988 -212.6195 C1935.2831 -208.8299 1943.8259 -198.0204 1945.3596 -190.4175 c1949.0907 -171.9198 1946.3179 -146.8669 1980.8111 -153.4214 Cf756.9936 1660.8474 m758.5297 1640.9013 760.1077 1626.7476 760.5671 1612.5577 c760.9763 1599.9119 764.4973 1591.324 779.2897 1593.6965 c797.0304 1596.5419 801.8935 1588.5057 801.2893 1571.6744 c800.7124 1555.6051 803.9433 1539.31 778.8841 1543.2683 c768.0065 1544.9866 764.1378 1538.9885 764.5579 1528.6198 c765.1878 1513.0743 765.4122 1497.5066 765.5011 1481.9466 c765.5857 1467.1391 768.7391 1455.2372 787.3973 1457.1229 c808.2969 1459.235 805.3066 1443.2702 807.8214 1430.9703 c810.9704 1415.5693 801.0668 1414.5643 789.8587 1411.4743 c730.8546 1395.2078 702.9877 1413.4223 698.003 1472.9758 c696.7066 1488.4636 696.0974 1504.0114 695.3113 1519.5386 c694.77 1530.2299 695.3191 1538.2916 680.2139 1542.9187 c662.4601 1548.357 663.503 1577.5431 679.9133 1587.5767 c683.7354 1589.9137 691.381 1592.0923 691.2495 1593.908 c688.009 1638.652 728.7626 1638.9221 756.9936 1660.8474 Cf2133.9413 737.0272 m2135.8201 726.7754 2128.8549 725.274 2122.0134 722.4032 C2056.4723 694.9001 1991.0926 667.0125 1925.6211 639.343 C1893.4988 625.7677 1899.7387 657.6771 1890.7605 670.1714 c1882.3101 681.9313 1879.07 694.0093 1899.398 702.1135 c1964.283 727.9813 2028.3099 755.9929 2092.8539 782.7279 C2108.5355 789.2232 2133.6228 760.5188 2133.9413 737.0272 Cf1595.2557 1295.4021 m1609.8759 1297.3337 1623.6991 1303.3013 1637.0899 1294.4367 c1648.5975 1286.819 1667.2417 1275.9581 1657.9809 1264.4968 c1649.3734 1253.8441 1633.3111 1230.8201 1611.2077 1249.1323 c1591.5469 1265.4205 1575.1219 1258.074 1561.2076 1242.7299 c1544.377 1224.17 1527.6941 1204.9455 1514.4245 1183.8241 c1498.5737 1158.5939 1485.7557 1176.1921 1475.0885 1185.6523 c1464.54 1195.0076 1437.0804 1198.7893 1458.032 1224.7211 C1484.3425 1257.285 1507.6246 1292.2886 1533.7353 1325.0255 c1540.9035 1334.0128 1544.0726 1358.5974 1563.6442 1343.7676 c1578.7954 1332.2873 1609.5752 1328.1255 1595.2557 1295.4021 Cf*u1 D0.380468 0.741146 0.359197 0.068208 0.615686 0.34902 0.458824 Xa1508.4886 562.9463 m1474.3507 588.6147 1435.1506 602.3431 1393.2925 609.1972 c1374.9086 612.2084 1366.4373 617.9891 1376.8279 639.6582 c1403.1428 694.5376 1426.0627 751.0333 1451.5845 806.308 c1482.4644 873.1889 1468.0377 949.2033 1413.7116 998.3442 c1368.2055 1039.5066 1320.8092 1035.3808 1286.0028 985.8587 c1270.9111 964.3872 1257.7282 941.4436 1245.1294 918.3752 c1197.5898 831.3334 1157.8609 740.5646 1118.1162 649.8115 c1112.7247 637.4982 1111.6644 622.2519 1091.1741 622.3863 c983.7685 623.0899 876.355 622.7148 762.9139 622.7148 C799.6589 694.1845 833.6387 760.9407 868.3915 827.2919 c875.1516 840.1999 881.0114 852.3015 881.2529 867.5232 c882.0988 920.84 839.0101 984.8846 789.4704 1002.1362 c745.2213 1017.545 692.804 995.3313 657.4794 945.081 c647.2163 930.483 637.9308 914.8546 630.5522 898.6272 c589.0473 807.3524 547.9428 715.8905 507.5578 624.115 c501.2158 609.7023 495.3209 601.4542 477.3542 600.2912 c438.0856 597.7509 399.012 591.8402 359.9419 586.6743 c283.5155 576.5684 209.8929 559.8069 148.1585 508.4182 c122.6868 487.2155 117.2302 462.5766 128.9322 435.2787 c146.4509 394.4106 177.5153 369.6434 223.6327 363.0545 c278.8767 355.1613 332.8593 366.7306 391.767 371.1902 C368.9261 316.6762 347.8754 267.473 327.8498 217.8551 c323.2487 206.4562 316.9524 200.4252 304.8569 198.8063 c251.7044 191.6922 198.6573 183.784 145.4794 176.8745 c90.5692 169.7402 38.021 156.0636 -10.4566 128.0376 c-26.8923 118.536 -38.415 106.8999 -32.4991 88.1489 c-20.8357 51.1825 -4.73566 18.2076 36.1817 2.34294 c91.7788 -19.2137 149.5946 -25.5707 207.9367 -28.5853 c232.9165 -29.8757 236.3712 -36.4812 226.8968 -58.4244 c216.0636 -83.5139 208.1379 -109.9088 199.7474 -135.9927 c177.0445 -206.5743 156.8273 -277.617 160.0765 -353.0245 c161.9431 -396.3416 188.8931 -439.5665 223.1531 -448.8854 c266.4333 -460.6568 289.4798 -429.703 311.6135 -401.8492 c335.5463 -371.7308 350.0626 -335.851 363.4221 -300.0293 c397.632 -208.2959 435.7139 -118.2377 477.8997 -29.9117 c483.7893 -17.5808 487.0288 -5.19632 506.0821 -2.1887 c611.2864 14.4147 716.6428 27.1549 823.4247 26.1518 c846.927 25.9304 845.7359 17.8246 837.8216 0.676622 c823.3325 -30.7154 810.3735 -62.8251 797.2249 -94.8197 c768.6138 -164.4395 739.0813 -234.0136 742.8707 -311.6047 c745.0377 -355.9759 767.4816 -388.0549 807.2113 -407.6167 c842.9681 -425.2224 865.3215 -400.0344 889.6969 -381.0954 c913.88 -362.3056 930.6942 -337.751 945.2817 -311.4659 c998.6775 -215.259 1039.1135 -112.8198 1087.4269 -14.1515 c1097.568 6.56098 1108.0911 13.0637 1131.1551 9.67225 c1196.108 0.120599 1261.4034 -7.29129 1326.7058 -14.1963 c1365.1373 -18.2598 1383.8682 -3.38859 1394.4423 34.4922 c1403.6444 67.4583 1389.9467 95.6134 1375.6315 123.1283 c1341.7167 188.3121 1280.1167 201.5179 1214.8388 205.0763 c1191.1644 206.3666 1184.9998 211.8996 1195.869 234.975 c1218.7477 283.5493 1240.3755 332.7675 1260.6769 382.4723 c1268.8188 402.4048 1280.4487 409.1641 1301.1964 406.998 c1362.9738 400.5479 1425.1914 399.3375 1486.7501 389.6102 c1539.748 381.2347 1565.3707 405.5293 1564.3079 459.6752 c1563.4435 503.7355 1542.7143 537.2102 1508.4886 562.9463 cf0 D943.7726 253.6717 m937.406 239.5005 924.8757 241.635 913.0552 241.5691 c809.2922 240.9929 705.474 246.7587 596.2984 236.7529 C618.8151 287.9554 639.6366 335.4457 660.6188 382.8641 c663.875 390.225 670.2082 392.2866 678.0742 392.645 c787.5581 397.629 897.0324 402.844 1013.4705 408.3314 C988.46 352.8573 966.0645 303.2877 943.7726 253.6717 cf*U*u1 D0.617731 0.66305 0.646967 0.61944 0.223529 0.180392 0.172549 Xa1810.2758 1126.7601 m1783.1843 1176.6353 1731.9942 1206.3022 1692.094 1195.2529 c1640.751 1181.0352 1606.3707 1132.3256 1614.8454 1085.8085 c1624.7265 1031.5712 1690.5498 984.3918 1749.4689 992.0452 C1732.6934 1012.9334 1724.1642 1038.4359 1694.5096 1045.0352 c1681.2423 1047.9866 1672.0359 1058.0882 1669.3858 1072.6054 c1667.3303 1083.8717 1668.3519 1095.7678 1678.0116 1101.5616 c1689.1821 1108.2612 1693.5425 1094.7488 1699.31 1088.8609 c1721.0424 1066.678 1742.6447 1044.2807 1762.8416 1020.7169 c1773.3112 1008.5028 1779.9791 1008.7365 1791.4175 1019.5504 c1822.9888 1049.4 1830.6703 1089.2158 1810.2758 1126.7601 cf0 D1753.2759 1083.3552 m1733.2529 1090.5439 1718.2262 1109.3916 1710.73 1128.451 c1706.2476 1139.8464 1724.1598 1140.471 1734.4098 1140.6265 c1756.7087 1140.9629 1765.7394 1127.3214 1768.7119 1107.8711 C1766.537 1096.9281 1763.0595 1079.8434 1753.2759 1083.3552 cf*U*u1 D1979.9068 891.6554 m1966.622 940.148 1924.9712 979.9515 1884.9375 982.411 c1832.2505 985.647 1781.0033 941.2047 1780.0291 891.4349 c1778.9092 834.1715 1836.7409 772.7384 1892.3889 774.4389 C1880.6913 798.8293 1876.9283 826.4934 1846.8618 837.9503 c1835.7316 842.1921 1829.7454 854.4308 1829.9298 867.4951 c1830.0915 878.9081 1834.3859 890.2411 1844.5973 894.3213 c1857.0994 899.3167 1859.3595 885.1983 1863.9008 878.0903 c1880.5877 851.9774 1896.888 825.5729 1912.1361 798.6009 c1920.3482 784.0749 1926.8957 781.351 1941.6686 792.2203 c1976.8254 818.0872 1990.8762 851.6085 1979.9068 891.6554 cf0 D1916.9286 861.92 m1896.2951 868.2163 1891.0248 893.1398 1881.7542 911.2444 c1876.9872 920.5536 1889.7678 923.888 1897.6399 924.1577 c1920.4554 924.9395 1931.0462 910.6164 1936.7381 891.8179 C1934.7907 877.1645 1928.5085 858.3871 1916.9286 861.92 cf*U*u1 D0.617121 0.672053 0.638849 0.621424 0.223529 0.176471 0.172549 Xa1189.5349 1511.5942 m1149.6769 1500.0785 1121.5771 1465.099 1118.1672 1422.7526 c1115.0788 1384.4001 1134.1715 1354.0411 1173.3172 1335.0616 c1226.1086 1309.4652 1265.2253 1311.1034 1296.186 1340.6974 C1272.0486 1353.7363 1249.6882 1366.8129 1219.3494 1363.2378 c1190.7094 1359.8631 1180.0957 1379.6173 1183.7964 1412.8574 C1221.223 1399.5164 1256.6434 1389.1417 1290.061 1374.2661 c1316.8063 1362.3612 1322.4439 1374.1352 1326.0382 1396.5527 c1337.3801 1467.2819 1260.7244 1532.1618 1189.5349 1511.5942 cf0 D1252.1504 1421.9207 m1233.7111 1428.607 1208.4371 1428.3831 1199.8947 1446.6677 c1195.7057 1455.6335 1214.8081 1468.5283 1230.6095 1471.174 C1249.928 1468.2727 1263.7891 1458.9564 1265.3061 1437.5895 c1265.9139 1429.0252 1263.1769 1417.9223 1252.1504 1421.9207 cf*U*u1 D0.622675 0.669764 0.638483 0.623224 0.219608 0.176471 0.172549 Xa2088.529 231.9841 m2034.1898 234.34 1993.8381 191.8195 1991.9619 130.2283 c1990.0435 67.1131 2025.0773 26.5172 2082.6034 25.1979 c2142.993 23.8126 2179.9628 61.7856 2181.3313 126.6085 c2182.605 186.8786 2145.0396 229.5334 2088.529 231.9841 cf0 D2086.6247 91.3436 m2063.3296 92.1227 2038.8857 97.4062 2038.176 127.4904 c2037.4381 158.6786 2060.3273 163.1207 2085.293 162.6165 c2109.6386 162.3758 2132.7966 158.7673 2133.3183 127.7337 c2133.8348 96.96 2110.8508 90.5328 2086.6247 91.3436 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF