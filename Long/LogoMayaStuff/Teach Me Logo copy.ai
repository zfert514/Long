%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 25.4.1%%For: (Zachary Fertig) ()%%Title: (Teach Me Logo copy.ai)%%CreationDate: 4/21/22 1:04 PM%%Canvassize: 16383%%BoundingBox: -250 66 794 798%%HiResBoundingBox: -250 66 794 798%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.5 420.3898 298.5 420.3898%AI3_TileBox: 9.63779 64.9449 585.6378 798.9449%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -972 1041 1 2547 1303 26 0 0 6 45 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 92 8%%BeginData: 13022 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD17FF84615A615A615A615A615A615A615A615A615A615A615A61%5A615A615A615A615A615A615A615A615A615A615A615A615A615A615A61%5A615A615A615A615A615A615A615A615A615A615A615A615A615A615A61%5A615A615A615A615A615A615A615A6184FD19FFA93636365B365A365B36%5A365B365A365B365A365B365A365B365A365B365A365B365A365B365A36%5B365A3661365A3661365A3661365A3661365A3661365A3661365A366136%5A3661365A3661365A3661365A3661365A3661365A3661365A3661365A36%61363636AFFD16FFA936615A6136615A6136615A6136615A6136615A6136%615A6136615A6136615A6136615A6136615A6136615A6136615A6136615A%6136615A6136615A6136615A6136615A6136615A6136615A6136615A6136%615A6136615A6136615A6136615A6136615A6136615A5B36AFFD14FFAF36%5A365A365A365A365A365A365A365A365A365A365A365A365A365A365A36%5A365A365A365A365A365A365A365A365A365A365A365A365A365A365A36%5A365A365A365A365A365A365A365A365A365A365A365A365A365A365A36%5A365A365A365A365A365A365A365A36FD14FF845B36615A6136615A6136%615A6136615A6136615A6136615A6136615A6136615A6136615A6136615A%6136615A6136615A6136615A6136615A6136615A6136615A6136615A6136%615A6136615A6136615A6136615A6136615A6136615A6136615A6136615A%6136615A61366185FD12FFAF61365A3661365A365B3636365B3636365B36%36365B3636365B3636365B3636365B3636365B3636365B3636365B363636%5B3636365B3636365B3636365B3636365B3636365B3636365B3636365B36%36365B3636365B3636365B3636365B3636365B3636365B365A3661365A36%61FD13FF36615A6136615A85608584856085848560858485608584856085%848560858485608584856085848560858485608584856085848560858485%608584856085848560858485608584856085848560858485608584856085%848560858485608584856085848560855A6136615A6136FD12FFA95A365A%365A36AFFD5FFFA9365A365A365AFD13FF5A615A613661FD60FFAF613661%5A6136FD12FFA95A3661365A36FD60FFAF365A3661365AFD13FF5A613661%5A61A9FD5FFFA9615A6136615AFD12FFA85A365A365A36AFFD5FFFAF365A%365A365AFD13FF5A6136615A61AFFD5FFFA9615A6136615AFD12FFA86136%5A365B36FD60FFAF3661365A3661FD13FF36615A613661AFFD5FFFA96136%615A6136FD12FFA95A365A365A36FD60FFAF365A365A365AFD13FF5A615A%613661AFFD5FFFA96136615A6136FD12FFA95A3661365A36FD60FFAF365A%3661365AFD13FF5A6136615A61A9FD5FFFA9615A6136615AFD12FFA85A36%5A365A36AFFD5FFFAF365A365A365AFD13FF5A6136615A61AFFD5FFFA961%5A6136615AFD12FFA861365A365B36FD60FFAF3661365A3661FD13FF3661%5A613661AFFD5FFFA96136615A6136FD12FFA95A365A365A36FD60FFAF36%5A365A365AFD13FF5A615A613661AFFD5FFFA96136615A6136FD12FFA95A%3661365A36FD60FFAF365A3661365AFD13FF5A6136615A61A9FD5FFFA961%5A6136615AFD12FFA85A365A365A36AFFD31FFCFCAFD2CFFAF365A365A36%5AFD13FF5A6136615A61AFFD31FFC2C8CFFD2BFFA9615A6136615AFD12FF%A861365A365B36FD11FFCACFC9CFFD1CFFCAC89FC9FD0CFFA7C9CFFD05FF%A0C9CFFD14FFAF3661365A3661FD13FF36615A613661AFFD0BFFC9C9C2C8%C2C89FC8C1C9FD1BFFCF9FC8C8FD0BFFCFC89FC8CFFFFFFFC8C79FC8FD14%FFA96136615A6136FD12FFA95A365A365A36FD0AFFC99FC19FC19FC89FC2%9FC89FC9FD0CFFA8FD0DFFA7C19FC9FD0BFFC99FC29FC8FFFFA7C19FC29F%CFFD13FFAF365A365A365AFD13FF5A615A613661AFFD09FFC9C8C1C8C1C8%C2C8C1C9C8C9C9FFC9C9C8CFFD05FFC9C2C8C8CFFD05FFCFC8CFFFFFFFC9%C1C8C9FD0BFFC8C8C1C8C2FFFFC9C1C8C1C8CAFD04FFC9C8CECFFD0BFFA9%6136615A6136FD12FFA95A3661365A36FD0BFFA7C8C8C99FC89FC9FD04FF%A0C79FC19FCFFFFFFFC99FC19FC89FCFFFFFFFC99FC89FCFFFFFA0C19FCF%FFC9A0FD07FFCAC89FC89FC8CAFF9FC89FC89FCFFFFFCAC89FC19FC8CAFD%0AFFAF365A3661365AFD13FF5A6136615A61A9FD0DFFCFC89FC8CFFFFFFF%C8C89FC8C1C89FFFFFCF9FC9CACFC2C8C2FFFFCFC1C89FC8C8FFFFC8C1C8%CFC9C1C89FFD06FFCF9FC8C1C89FCFC9C89FC8C1C8CAFFCFC89FC8C1C89F%C9FD0AFFA9615A6136615AFD12FFA85A365A365A36AFFD0DFFCF9FC29FFF%FFFFA7C19FC1A0CFA0C1A8FFCACFFFFFFFC99FC8CAFF9FC89FC29FC1C9FF%9FC8A0CA9FC89FC1A0FD05FFA7C19FC8A0C1A7C89FC29FC89FCFFFC99FC2%9FC9C9C1A0FD0AFFAF365A365A365AFD13FF5A6136615A61AFFD0DFFCFC8%C1C9FFFFFFC9C1C8C9FFFFC8C1FFFFFFC9C9C9FFC8C8C2FFC9C8C1C8CAFF%C8C9FFC8C1C9C8C8C1C8C1C9FD05FFC9C1C8C9C9C1C8C2C8C2C9C1C8CFFF%C1C8C1CFFFCF9FC9FD0AFFA9615A6136615AFD12FFA85B365A365A36AFFD%0DFFCF9FC1A6FFFFFF9FC89FC9A7C89FC8CAFFA0C19FC89FC89FC8CAC89F%C8CAFFFFFFCFFF9FC89FC89FC99FC1A6FD05FFC8C19FCFC9C19FC89FC9A6%C89FCFA7C89FC8A7C99FC1A0FD0AFFAF3661365A3661FD13FF8485848560%85FD0EFFCAC8C1C9FFFFCAC89FC8C1C89FC8C8FFC9C8C2C89FC8C2C8A0CF%C2C8C9FD05FFCFC89FC8C1C9CAC8C1C9FD05FFC9C1C8CAFFC1C89FC8FFC9%9FC8CACA9FC8C1C89FC8C1CFFD0AFFA96136615A6136FD27FFCF9FC1A7FF%FFCF9FC29FC19FC19FFFFFC99FC8A7CFA0C89FC8A8C89FCFFD04FFA7C89F%C29FC8CACF9FC1A7FD05FFA0C29FCFFFC89FC1A7FFA7C19FCFA7C19FC89F%C19FC9CFFD0AFFAF365A365A365AFFFFFFCAFFCFCFCAFFCFCFCAFFCFCFCA%FFCFCFCAFFCFCFCAFFCFFD0DFFCFC8C1C9FFFFCAC8C8FFCACFCAFFC9C8C8%C8C9FFFFC9C1C8C2FFC2C8FD04FFC8C8C1C8C1C8C8FFCAC8C1CFFD05FFC9%C1C8CFFFCAC7C1FFFFCF9FC8C9CF9FCFCFCFCAFFCFC9C2FD09FFA9613661%5A6136CAC89FC29FC89FC29FC89FC29FC89FC29FC89FC29FC89FC29FC89F%C9FD0CFF9FC8C9FFFFFF9FC8A7FFCACAA0C1A0C99FC9CAC89FC89FC8FFC9%9FC9A7C99FC19FC89FC89FCFFFCF9FC7C9FD05FFA7C79FFFFFFFC9C9FFFF%CAC19FC9C9C1A0FFCFCFA7C89FC9FD09FFAF365A3661365AC89FC8C1C79F%C8C1C89FC8C2C89FC8C2C89FC8C2C89FC8C1C79FC8C1FD0CFFC89FC9FFFF%FFC8C1C89FC8C1C89FCFFFC89FC8C1C89FC8C1FFCAC8C1C89FC8C1C8C9C9%C1C8CFFFFFC89FC9FD05FFCF9FC8CFFD07FFC1C8C8FFC1C89FC8C1C89FC8%CFFD09FFA9615A6136615A9FC29FC9C9CAA7C89FC29FC89FC29FC89FC29F%C89FC9A7CFC9C89FC8CAFD0BFFC9C1A0FFFFFFA7C19FC19FC19FC9FFFFA7%C19FC19FC9A0C8CFFFA7C89FC19FC9CAFFA8C89FFFFFFFC9C1A0FD05FFCF%C89FCFFD07FFC99FC8FFC99FC19FC29FC8A8FD0AFFAF365A365A365AC8C1%C9FD04FFCAC8C2C8C8C8C2C8C8C8C2C8C8CFFD04FFC9C8C1CFFD0CFFCAFD%05FFCAC9C2C9C9FD05FFCACFC9FD07FFCFCFC9FD05FFCFCFFD04FFCACFFD%06FFCFCFFD0AFFCFFFFFCEC8C9C8CFFD0CFFA9615A6136615A9FC1A7FD07%FFCFFFFFFFCFFFFFFFCFFD06FFCF9FC8CAFD5CFFAF3661365A3661C8C1C9%FD16FFCAC89FCFFD5CFFA96136615A61369FC1A7FD16FFCF9FC2A8FD5CFF%AF365A365A365AC8C1C9FD16FFCAC8C1FD5DFFA96136615A61369FC8C9FD%16FFCF9FC2CAFD5CFFAF365A3661365AC89FC9FD16FFC9C8C1CFFD5CFFA9%615A6136615A9FC1A6FD16FFCA9FC8CAFD5CFFAF365A365A365AC89FCEFD%16FFCAC8C1CFFD5CFFA9615A6136615A9FC1A7FD16FFCA9FC8CAFD5CFFAF%3661365A3661C8C1C9FD16FFCAC89FCFFD5CFFA96136615A61369FC1A7FD%16FFCF9FC2A8FD5CFFAF365A365A365AC8C1C9FD16FFCAC8C1FD5DFFA961%36615A61369FC8C9FD16FFCF9FC2CAFD5CFFAF365A3661365AC89FC9FD0A%FFA9FFAFFD09FFC9C8C1CFFD5CFFA9615A6136615A9FC1A6FD06FFAF8485%365A365A5A8584FD06FFCA9FC8CAFD5CFFAF365A365A365AC89FCEFD04FF%AF85365B36615A855A61366160FD05FFCAC8C1CFFD5CFFA9615A6136615A%9FC1A7FFFFFF8461365A84FFAFFFA9FFAFA95A363685FFFFFFCA9FC8CAFD%5CFFAF3661365A3661C8C1C9FFFFA95B3685FFFF84855A615AA9AFFF8461%36A9FFFFCAC89FCFFD5CFFA96136615A61369FC1A7FFFFA93685FF853636%365AFD04365AFF845A84FFFFCF9FC2A8FD5CFFAF365A365A365AC8C1C9FD%05FF85366184FFFFFFAFAF5A375AFD05FFCAC8C1FD5DFFAF6136615A6136%9FC8C9FD04FFAF3661A9FF84855A85A8FF5A3684FD04FFCF9FC2CAFD5CFF%A9365A3661365AC89FC9FD05FFAFFFAF5A363661365B84FFA9FD05FFC9C8%C1CFFFAF8485848584858485848584858485848584858485848584858485%848584858485848584858485848584858485848584858485848584858485%848584858485848584858485848584858485848584858485848584858485%8485848536615A6136615A9FC1A6FD07FF36365AAFA8853636A9FD06FFCA%9FC8CAFF5AFD04365A3636365A3636365A3636365A3636365A3636365A36%36365A3636365A3636365A3636365A3636365A3636365A3636365A363636%5A3636365A3636365A3636365A3636365A3636365A3636365A3636365A36%36365A365A365A365A365AC8C1CEFD07FFAFA9FFAFFFFFAF84FD07FFCAC8%C1CFFF85366136615A6136615A6136615A6136615A6136615A6136615A61%36615A6136615A6136615A6136615A6136615A6136615A6136615A613661%5A6136615A6136615A6136615A6136615A6136615A6136615A6136615A61%36615A6136615A6136615A9FC1A7FD09FFA95A36A9FD09FFCA9FC8CAFF84%5A365A3661365A3661365A3661365A3661365A3661365A3661365A366136%5A3661365A3661365A3661365A3661365A3661365A3661365A3661365A36%61365A3661365A3661365A3661365A3661365A3661365A3661365A366136%5A3661365A3661C8C1C9FD09FF85365B5AFD09FFCAC89FCFFF8536615A61%36615A6136615A6136615A6136615A6136615A6136615A6136615A613661%5A6136615A613685A98536615A6136615A6136615A6136615A6136615A61%36615A6136615A6136615A6136615A6136615A6136615A6136615A613661%5A61369FC1A7FD09FF84363685FD09FFCF9FC2A8FF8436365A365A365A36%5A365A365A365A365A365A365A365A365A365A365A365A365A365A365A36%5A3685FFFFFF85365A365A365A365A365A365A365A365A365A365A365A36%5A365A365A365A365A365A365A365A365A365A365A365A365A365A365AC8%C1C9FD0AFFA9AFFD0AFFCAC8C1FFFF8536615A6136615A6136615A613661%5A6136615A6136615A6136615A6136615A6136615A6136615A5B85FFFFFF%85615A6136615A6136615A6136615A6136615A6136615A6136615A613661%5A6136615A6136615A6136615A6136615A6136615A61369FC8C9FD16FFCF%9FC2CAFF84363661365A3661365A3661365A3661365A3661365A3661365A%3661365A3661365A3661365A36613661FFFFFF603661365A3661365A3661%365A3661365A3661365A3661365A3661365A3661365A3661365A3661365A%3661365A3661365A36613661C89FC9FD16FFC9C8C1CFFF85366136615A61%36615A6136615A6136615A6136615A6136615A6136615A6136615A613661%5A61366136618461366136615A6136615A6136615A6136615A6136615A61%36615A6136615A6136615A6136615A6136615A6136615A6136615A613661%859FC1A6FD16FFCA9FC8CAFF5A5A365A365A365A365A365A365A365A365A%365A365A365A365A365A365A365A365A365A365A365A365A3636365A365A%365A365A365A365A365A365A365A365A365A365A365A365A365A365A365A%365A365A365A365A365A365A365A365A36365AFFC8C1CEFD16FFCAC8C1CF%FF85366136615A6136615A6136615A6136615A6136615A6136615A613661%5A6136615A6136615A6136615A6136615A6136615A6136615A6136615A61%36615A6136615A6136615A6136615A6136615A6136615A6136615A613661%5A6136615A615AFFFF9FC1A7FD16FFCA9FC8CAFF5AFD04365A3636365A36%36365A3636365A3636365A3636365A3636365A3636365A3636365A363636%5A3636365A3636365A3636365A3636365A3636365A3636365A3636365A36%36365A3636365A3636365A3636365A3636365A3636365B5AFFFFFFC8C1C9%FD16FFCAC89FCFFFAF5A8584856085848560858485608584856085848560%858485608584856085848560858485608584856085848560858485608584%856085848560858485608584856085848560858485608584856085848560%8584856085848560858485A9FD04FF9FC1A7FD16FFCF9FC2A8FD63FFC8C1%C9FD16FFCAC8C1FD64FF9FC8C9FD16FFCF9FC2CAFD25FF84858485848584%8584858485848584FD2FFFC89FC9FD16FFC9C8C1CFFD24FF845B365B3661%365B3661365B3661363684FD2EFF9FC1A6FD16FFCA9FC8CAFD23FFAF5A36%5A365A365A365A365A365A365A3660AFFD2DFFC89FCEFD16FFCAC8C1CFFD%23FFAF36615A6136615A6136615A6136615A6136AFFD2DFF9FC1A7FD16FF%CA9FC8CAFD09FFA9FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA9FF5A5A3661365A3661365A3661365A3661365A5AAFA9FFA8FFA9FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FD13FFC8C1C9FD16FFCAC89F%CFFD07FFAF606136615A6136615A6136615A6136615A6136615A6136615A%6136615A6136615A6136615A6136615A6136615A6136615A6136615A6136%615A6136615A6136615A6136615A61366160AFFD11FF9FC1A7FD16FFCF9F%C2A8FD06FF85365A365A365A365A365A365A365A365A365A365A365A365A%365A365A365A365A365A365A365A365A365A365A365A365A365A365A365A%365A365A365A365A365A365A365A365A365A365A3685FD10FFC8C1C9FD16%FFC9C8C1FD06FFAF36615A6136615A6136615A6136615A6136615A613661%5A6136615A6136615A6136615A6136615A6136615A6136615A6136615A61%36615A6136615A6136615A6136615A6136615A6136615A6136AFFD0FFF9F%C89FC8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C8A0C9A6C9A0C89FC2CAFD05%FF5A5A3661365A3661365A3661365A3661365A3661365A3661365A366136%5A3661365A3661365A3661365A3661365A3661365A3661365A3661365A36%61365A3661365A3661365A3661365A366136365AFD0FFFC99FC8C1C89FC8%C1C89FC8C1C89FC8C1C89FC8C1C89FC8C1C89FC8C8FD05FFA961365B3661%365B3661365B3661365B3661365B3661365B3661365B3661365B3661365B%3661365B3661365B3661365B3661365B3661365B3661365B3661365B3661%365B3661365B3661365B3661365BAFFD0EFFCFC9A0C9A0C9A0C9A0C9A0C9%A0C9A0C9A0C9A0C9A0C9A0C9A0C9A0CFFD06FF84A9848584A9848584A984%8584A9848584A9848584A9848584A9848584A9848584A9848584A9848584%A9848584A9848584A9848584A9848584A9848584A9848584A9848584A984%8584A9848584A984FD0EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Auu*u0 O0.699977 0.155367 0 0 0.160784 0.666667 0.882353 Xa0 J 0 j 1 w 10 M []0 d0 XR794 221 m792.8589 216.5132 792.0884 211.8918 790.515 207.5623 C782.2034 184.6896 761.058 170.1797 736.1337 170.1597 C684.1404 170.1181 632.1472 170.1471 580.1539 170.147 C388.3455 170.147 196.5371 170.144 4.7287 170.1586 C-2.74472 170.1591 -1.83261 169.2899 -1.84079 176.8794 C-1.87137 205.209 -1.8537 233.5387 -1.85251 261.8683 c-1.85223 268.3693 -1.8493 268.3742 4.52321 268.3743 C128.6737 268.3752 252.8243 268.3749 376.9748 268.3749 c494.4595 268.3749 611.9443 268.3763 729.429 268.3675 C732.4309 268.3672 735.4348 268.3115 738.2545 269.5458 c741.6341 271.0251 743.2758 273.8271 743.7584 277.3244 c743.9843 278.9619 743.8512 280.6514 743.8513 282.3173 C743.854 431.6312 743.8539 580.9451 743.8536 730.259 C743.8536 741.2292 741.0361 744.0011 729.8811 744.0011 C476.5807 744.0016 223.2802 744.0015 -30.0202 744.0014 C-43.3615 744.0014 -45.5942 741.8238 -45.6105 728.2674 c-45.653 692.9387 -45.625 657.61 -45.6251 622.2812 C-45.6251 580.12 -45.7203 537.9583 -45.4985 495.7983 C-45.4723 490.8077 -46.9348 489.7693 -51.6188 489.8876 C-64.6089 490.2159 -77.6143 490.1176 -90.6098 489.9256 c-94.1618 489.8731 -95.4709 490.5948 -95.4652 494.525 C-95.3452 577.514 -95.4649 660.5034 -95.3216 743.4924 C-95.2752 770.3993 -73.0849 794.2257 -46.0787 797.098 C-45.5812 797.0532 -45.0843 796.9708 -44.5874 796.9708 c216.4932 796.9768 477.5739 796.9881 738.6545 797.0077 c740.1484 797.0078 741.6424 797.1266 743.1364 797.1899 C758.4867 795.75 770.9127 788.7858 780.8866 777.1968 C788.3811 768.4889 791.9207 758.0609 794 747 C794 571.6667 794 396.3333 794 221 Cf1 D366.0811 220.7337 m366.019 230.0174 358.5552 237.3885 349.2367 237.369 C339.6216 237.3489 332.0586 229.851 332.1487 220.4283 C332.2365 211.2636 339.8585 203.7208 349.0553 203.6976 c358.5709 203.6736 366.1444 211.2517 366.0811 220.7337 Cf*U*u0 D0.002197 0.353185 0.871305 0 0.980392 0.686275 0.231373 Xa-249.2164 456.1639 m-246.9482 466.3067 -240.1272 471.8517 -229.7198 471.8545 C-166.569 471.8717 -103.4182 471.8741 -40.2675 471.8531 C-28.5599 471.8493 -20.9146 464.5621 -20.1629 452.8174 C-20.0673 451.3236 -20.1372 449.819 -20.1372 448.3194 C-20.1366 328.8494 -20.204 209.3793 -20.0257 89.9096 c-20.009 78.7665 -23.4413 70.527 -34 66 C-101 66 -168 66 -235 66 C-242.3944 68.8979 -248.1651 73.2544 -249.2291 81.8392 C-249.1527 83.6664 -249.0098 85.4937 -249.0096 87.321 c-248.999 208.6078 -248.9991 329.8946 -249.0089 451.1814 c-249.009 452.8422 -249.1442 454.5031 -249.2164 456.1639 Cf1 D-229.1353 269.2639 m-229.1353 212.4473 -229.1361 155.6307 -229.1345 98.8141 c-229.1342 88.3393 -226.4073 85.658 -215.7585 85.6577 C-170.7717 85.656 -125.785 85.6569 -80.7983 85.657 C-70.9678 85.657 -61.1372 85.6975 -51.3071 85.6417 C-46.4692 85.6143 -42.7184 87.3992 -41.2411 92.153 c-40.5223 94.4658 -40.6779 97.0943 -40.6774 99.5799 C-40.6539 212.5466 -40.6567 325.5133 -40.66 438.48 C-40.66 439.9789 -40.6089 441.4867 -40.7473 442.9749 c-41.2494 448.3745 -44.7471 451.9448 -50.1824 452.0661 c-58.6757 452.2557 -67.1764 452.0986 -75.6735 452.1504 c-77.5511 452.1618 -78.4677 451.7259 -79.1019 449.6094 C-81.1721 442.6997 -84.9089 440.0175 -91.8228 440.0112 C-120.6476 439.9846 -149.4725 439.9846 -178.2973 440.0121 C-184.6721 440.0182 -189.053 442.8299 -190.6128 448.849 c-191.433 452.0146 -192.977 452.1974 -195.4873 452.1642 C-202.1508 452.0761 -208.8163 452.1381 -215.481 452.1344 c-226.4327 452.1284 -229.1347 449.4727 -229.1349 438.7139 c-229.1357 382.2305 -229.1353 325.7472 -229.1353 269.2639 Cf*U0 D0.388739 0.019928 0.023621 0 0.576471 0.831373 0.937255 Xa743.1364 797.1899 m741.6424 797.1266 740.1484 797.0078 738.6545 797.0077 c477.5739 796.9881 216.4932 796.9768 -44.5874 796.9708 c-45.0843 796.9708 -45.5812 797.0532 -46.0787 797.098 C-45.9923 797.394 -45.9658 797.6943 -46 798 C217 798 480 798 743 798 C743.0551 797.7316 743.1005 797.4616 743.1364 797.1899 Cf0.007721 0.163058 0.424842 0 0.988235 0.839216 0.611765 Xa-249.2164 456.1639 m-249.1442 454.5031 -249.009 452.8422 -249.0089 451.1814 c-248.9991 329.8946 -248.999 208.6078 -249.0096 87.321 c-249.0098 85.4937 -249.1527 83.6664 -249.2287 81.8394 C-249.5092 81.7796 -249.7664 81.8331 -250 82 C-250 206.6667 -250 331.3333 -250 456 C-249.7541 456.1279 -249.4929 456.1826 -249.2164 456.1639 Cf0.699977 0.155367 0 0 0.160784 0.666667 0.882353 Xa348.9918 68.8535 m243.3321 68.8536 137.6724 68.8854 32.0128 68.7509 C27.1852 68.7448 25.8918 69.5787 26.6311 74.7263 C29.5763 95.2305 46.0493 110.9261 66.6644 112.1346 C69.9871 112.3295 73.3229 112.365 76.6527 112.3657 C139.8152 112.3786 202.9778 112.4425 266.1396 112.2423 C270.9894 112.227 273.1732 113.9075 274.9293 118.0925 C278.5957 126.8294 282.8661 135.3116 286.6021 144.0212 C287.8337 146.8925 289.345 147.9321 292.4996 147.923 C330.3301 147.8148 368.1611 147.8149 405.9916 147.9265 C408.9907 147.9354 410.4148 146.8974 411.572 144.2662 C415.6567 134.9791 420.1176 125.8555 424.0977 116.5256 c425.5145 113.2042 427.4245 112.2974 430.8859 112.3026 c495.8814 112.4012 560.8772 112.3187 625.8727 112.4095 c645.4408 112.4368 659.7389 104.2115 668.326 86.4813 C670.5295 81.9316 671.382 77.0158 671.9736 72.0375 c672.2542 69.6766 671.4233 68.6069 668.9684 68.8351 c667.6467 68.9579 666.304 68.8537 664.9708 68.8537 C559.6445 68.8535 454.3181 68.8535 348.9918 68.8535 Cf0.002197 0.353185 0.871305 0 0.980392 0.686275 0.231373 Xa375.2888 495.9506 m379.7192 504.9203 383.6577 513.8726 388.5704 522.3928 C395.6538 534.6774 403.6082 534.951 414.4888 527.088 c422.4148 521.3602 426.2633 514.6344 424.5145 503.7141 C421.5999 485.5128 420.5934 466.951 425.4179 448.6979 C425.9145 446.8192 426.2194 444.9309 424.5179 443.6569 c422.7582 442.3392 420.6415 442.7009 418.8061 443.5995 C407.8997 448.9392 401.6179 457.4759 401.0191 469.8182 C400.5106 480.3004 400.4698 490.7855 401.2344 501.5969 C397.7458 501.0367 396.4264 498.3524 395.0891 496.1387 C386.0922 481.2467 378.8016 465.6622 376.5031 448.1578 C375.8455 443.151 373.3928 441.8133 368.9349 444.5121 c361.1527 449.2233 356.6419 456.3917 354.5317 465.6993 C345.4351 454.5947 333.6957 448.3025 320.4772 444.7218 c307.6662 441.2515 297.2039 445.1515 289.3484 455.8838 C278.6454 470.5065 276.6827 486.4123 283.2338 503.1293 C287.7723 514.7109 294.5145 525.0483 303.9586 533.3354 C314.8917 542.9294 323.1175 541.7643 331.2478 529.8396 C334.4467 525.1479 337.2472 520.2418 339.6418 515.1091 c340.8342 512.5531 342.03 509.9201 342.0686 507.0369 c342.0962 504.9781 342.9329 502.4148 340.3823 501.2464 c337.9548 500.1343 335.7794 501.313 334.0502 503.0096 c332.1541 504.8701 330.3968 506.8853 328.7018 508.9348 c325.7225 512.5372 322.0737 512.9424 318.5122 510.4339 C307.3796 502.5931 299.667 491.9576 296.2919 478.8738 C293.9424 469.7661 297.8713 465.9941 307.1662 466.9132 C316.7499 467.8608 325.5881 471.2787 333.7743 476.2437 C339.0488 479.4427 344.2013 482.8174 350.2701 484.332 C352.4088 484.8658 353.0466 485.945 352.9844 488.2147 C352.2546 514.8215 356.2239 540.9574 361.1224 566.9904 C361.3988 568.459 361.7687 569.9238 362.2505 571.3373 C363.8749 576.1038 367.2681 577.6291 371.6209 575.0629 C378.0124 571.2947 382.2261 565.5432 384.8257 558.6593 C385.6149 556.5697 384.8093 554.4726 384.1946 552.3435 C378.8721 533.9092 377.2087 514.8798 375.2888 495.9506 Cf550.6188 508.624 m543.4322 496.5824 534.6236 485.4027 531.8185 471.0677 C530.835 466.0414 526.9628 464.4761 522.3365 467.0147 c517.3246 469.765 514.1395 474.2302 511.7043 479.2598 C506.4976 490.0132 504.6116 501.7191 502.0455 513.2281 C501.6505 514.9993 501.2652 516.7727 500.6558 519.5441 C497.3844 510.596 496.2922 502.2066 495.094 493.8779 C493.0034 479.3459 491.8877 464.7664 494.0417 450.1069 C494.3922 447.7216 495.1017 444.8193 492.4059 443.3132 c489.8621 441.8921 487.1851 442.847 484.8129 444.2266 C475.5338 449.6231 472.2332 458.3801 471.3066 468.4536 C468.5141 498.8139 472.1987 528.1965 484.6922 556.2124 C487.9872 563.6011 491.5298 564.7595 498.9811 561.3743 C512.217 555.3612 517.2334 544.4751 518.0923 530.5894 C518.5698 522.8701 520.3373 515.2306 521.7418 506.1422 C525.9576 513.6498 528.1097 520.3863 530.7794 526.877 C534.8284 536.7216 538.5433 546.7179 544.1874 555.8096 C549.9371 565.0715 554.0425 566.1976 563.987 561.4727 C572.1428 557.5978 577.0369 552.3122 576.1549 542.1006 C573.6203 512.7524 576.3843 483.5961 580.853 454.5652 C581.3429 451.3828 582.3216 447.6372 579.1124 445.2515 C575.755 442.7557 572.0934 443.9875 568.6823 445.5356 c562.4255 448.3753 558.2762 452.7899 556.7684 459.8511 C553.8737 473.4074 552.0297 487.0441 552.0015 500.913 C551.9966 503.358 552.0009 505.8029 552.0009 508.2479 C551.5402 508.3732 551.0795 508.4986 550.6188 508.624 Cf*u122.9192 482.6853 m123.5004 504.3441 130.7822 522.6699 149.5611 535.0428 C155.8256 539.1703 162.6784 541.5103 170.3851 539.4196 C186.3182 535.0974 193.6382 523.7029 191.6498 506.0155 C191.2421 502.3889 190.609 498.7654 189.7715 495.2133 c187.041 483.6335 178.7061 476.7466 166.6938 475.9572 C158.4724 475.4169 150.3875 476.2079 142.5443 478.7696 C139.7362 479.6867 138.7526 479.0447 138.6922 476.0225 C138.5471 468.767 141.7606 465.0109 149.081 463.9754 C164.5641 461.7856 177.1856 468.7093 189.5888 476.4565 C192.4106 478.219 195.2614 482.2321 198.7015 479.3954 c201.8677 476.7846 200.1772 472.4332 198.8776 469.0903 C192.5389 452.7856 179.442 444.8627 163.2402 441.0065 C158.6729 439.9194 154.0101 439.6305 149.3533 440.3372 c137.1558 442.1884 128.8965 448.4386 126.0301 460.9775 C124.3952 468.1294 122.7325 475.2397 122.9192 482.6853 Cf1 D148.1756 499.1242 m150.8369 497.5764 153.5796 497.9411 156.1524 497.5882 C166.5393 496.1635 174.8924 502.9383 175.6345 513.3138 c175.9319 517.4711 174.054 519.0649 170.2368 517.3248 C161.3743 513.2848 153.7263 507.6603 148.1756 499.1242 Cf*U*u0 D623.5524 475.8987 m617.1442 475.5775 610.998 476.9899 604.9145 478.7581 c602.2247 479.5399 600.9796 478.9606 600.9395 475.8105 c600.8508 468.8568 604.3503 464.9262 611.6367 463.9509 C624.0175 462.2936 634.8918 466.5357 645.3444 472.3958 C648.5277 474.1805 651.5296 476.297 654.5612 478.3409 c656.545 479.6784 658.6476 481.1456 660.9487 479.6969 C663.1152 478.333 662.4149 475.7593 662.2419 473.699 C661.7677 468.0457 659.3809 462.9884 655.7476 458.8336 C643.2744 444.5699 627.7142 437.7317 608.6531 441.0813 C598.9233 442.7911 592.1594 448.4834 589.2548 458.2893 C582.6951 480.4339 583.5982 501.6596 597.2361 521.1671 C602.4575 528.6356 609.1345 534.6389 617.7563 538.0468 C634.6539 544.7258 652.6343 533.4847 653.942 515.4304 C654.4368 508.5979 653.9264 501.84 652.1321 495.1637 C648.946 483.3088 640.7507 476.5079 628.5424 475.9155 C626.882 475.8349 625.2144 475.9044 623.5524 475.8987 Cf1 D619.5922 497.2111 m629.7184 497.0588 637.8187 504.3256 637.9957 513.3673 C638.0817 517.7539 636.6445 518.9269 632.5594 517.2909 c626.3053 514.7862 620.9205 510.8655 616.3024 506.0001 C614.3513 503.9444 610.4077 501.9225 611.6582 499.1788 C612.7574 496.7673 617.1265 497.9487 619.5922 497.2111 Cf*U*u0 D202.1095 478.2571 m202.4843 485.063 202.6512 491.9247 206.4356 497.989 C212.0089 506.9197 222.5189 510.6177 232.5612 507.0027 C237.2509 505.3145 241.8461 503.3445 246.4091 501.332 C248.7454 500.3016 249.6849 500.814 249.9929 503.3512 c250.4732 507.309 251.2719 511.2273 251.8037 515.1801 c252.4701 520.1326 250.6929 523.0885 245.8271 523.8518 c239.3549 524.8672 232.8919 525.0595 227.3732 520.2693 c224.8629 518.0902 221.8857 516.5453 218.6038 515.6359 C216.409 515.0277 214.1382 514.5784 212.5593 516.4347 C211.0222 518.2417 211.4811 520.7061 212.3632 522.6483 c215.9177 530.4753 221.3293 536.667 229.3348 540.1725 C240.2923 544.9706 250.6387 544.6052 259.9579 536.1951 c263.4263 533.065 266.8416 529.9265 269.6536 526.157 c272.892 521.816 273.944 517.2335 273.4467 511.6898 C271.8245 493.6046 271.4008 475.4481 272.0699 457.2939 c272.2222 453.1619 271.9233 449.4641 267.7579 447.5984 c263.8469 445.8467 260.2175 447.7131 257.8347 450.4112 c254.7741 453.877 252.7116 452.9681 249.7886 450.5496 C247.5102 448.6645 244.7996 447.2281 242.1253 445.9075 C227.0412 438.4585 211.7178 444.4548 205.558 460.2361 C203.3078 466.0009 201.7856 471.9593 202.1095 478.2571 Cf1 D233.1686 484.9789 m224.2533 485.1436 215.4836 473.2282 217.9691 465.7603 c218.9505 462.8113 221.1179 462.5025 223.5413 463.3411 C232.012 466.2725 238.9138 471.7699 245.6622 477.4086 C247.5341 478.9727 247.4142 480.9796 244.6702 481.9282 C240.5992 483.3357 236.5125 484.7008 233.1686 484.9789 Cf*U0 D74.867 497.4608 m74.9548 507.6051 74.7563 517.7633 75.8775 527.8692 C76.2405 531.1415 75.5483 532.3752 71.8907 531.4381 c68.85 530.6591 65.7315 530.1841 62.7317 529.1487 C53.5959 525.9955 42.7006 530.8005 38.5547 539.7352 C36.3527 544.4807 37.6017 547.4586 42.714 549.3957 c55.88 554.3843 69.6246 556.6326 83.5617 557.9795 c94.1411 559.0019 104.6347 560.6696 115.2825 561.2855 c125.2022 561.8593 136.368 550.9963 138.5327 543.0466 C139.5973 539.1371 138.0089 536.9504 133.8012 536.9142 c125.1377 536.8398 116.5606 535.7151 107.9401 535.1513 C105.0617 534.9631 103.4542 534.3241 102.8513 531.1271 C97.8392 504.5532 94.5893 477.9182 98.9263 450.8894 C99.2838 448.6618 100.193 446.1095 98.0701 444.3199 C95.8324 442.4337 93.2032 443.3626 90.9836 444.4066 C82.2455 448.5166 76.7587 455.0216 75.9613 465.0553 c75.1038 475.846 74.7684 486.6428 74.867 497.4608 Cf0.699977 0.155367 0 0 0.160784 0.666667 0.882353 Xa-131.1575 327.8391 m-108.0512 327.3634 -86.8232 318.0288 -68.8052 301.0821 C-64.6496 297.1735 -64.3123 292.6667 -67.6053 289.2635 C-70.8276 285.9332 -75.3581 286.1532 -79.4819 290.1113 C-94.405 304.4346 -112.3241 312.0205 -132.8359 312.5483 C-154.1149 313.0958 -172.8945 305.9061 -188.8034 291.6143 C-194.6752 286.3393 -199.0629 285.5818 -202.515 289.4461 C-205.8731 293.2054 -204.6002 298.1032 -199.0206 303.114 C-180.2271 319.992 -157.9474 327.5435 -131.1575 327.8391 Cf-134.1954 302.3312 m-116.6642 302.0619 -100.5409 296.1386 -87.0832 283.4862 C-82.4723 279.1512 -81.9575 275.0565 -85.386 271.3574 C-88.4877 268.0109 -93.1888 268.0654 -97.251 272.1458 C-115.5369 290.5136 -149.8322 293.8198 -172.1453 272.5071 C-175.1536 269.6337 -178.5626 267.5143 -182.8671 270.0994 C-187.5551 272.9149 -187.9925 278.4755 -183.586 282.7673 C-170.0913 295.9105 -153.8033 302.2693 -134.1954 302.3312 Cf-134.6364 277.044 m-122.8193 276.9697 -112.5424 273.0223 -104.1127 264.6428 C-100.3496 260.9023 -100.1626 257.0616 -103.284 253.6395 c-106.393 250.2307 -110.0991 250.2083 -114.3117 253.5729 c-128.5202 264.9208 -140.7878 264.9951 -155.3015 253.821 c-159.9058 250.2762 -163.6802 250.2425 -166.7537 253.7189 C-169.9676 257.3541 -169.3908 261.3932 -165.0739 265.4817 c-157.1131 273.0214 -146.5661 277.0147 -134.6364 277.044 Cf-121.0018 234.5396 m-120.9903 226.6611 -127.5845 220.0112 -135.1834 220.2383 C-142.8304 220.4667 -148.9832 226.8122 -148.9907 234.478 c-148.9984 242.3409 -142.3896 248.9623 -134.7354 248.7606 C-127.0527 248.5582 -121.013 242.3043 -121.0018 234.5396 CfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF